{"ast":null,"code":"var _jsxFileName = \"/Users/rominatorresbarahona/Archivov2/src/component/SelphiContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { RootProvider } from '../context/provider';\nimport { RootContext } from '../context/provider';\nimport { SelphId } from \"./SelphId\";\nimport { Selphi } from \"./Selphi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelphiContainer = () => {\n  _s();\n\n  const rootContext = useContext(RootContext);\n  let {\n    activeView,\n    setActiveView\n  } = rootContext;\n\n  const selectActiveView = () => {\n    console.log(selectActiveView);\n\n    if (activeView === \"SelphId\") {\n      return /*#__PURE__*/_jsxDEV(SelphId, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (activeView === \"Selphi\") {\n      return /*#__PURE__*/_jsxDEV(Selphi, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Fin del proceso \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"biometric\",\n    children: selectActiveView()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelphiContainer, \"Lsnx0d+QYa+Mz+iWptwD2UIXgas=\");\n\n_c = SelphiContainer;\nexport { SelphiContainer };\n\nvar _c;\n\n$RefreshReg$(_c, \"SelphiContainer\");","map":{"version":3,"names":["React","useContext","RootProvider","RootContext","SelphId","Selphi","SelphiContainer","rootContext","activeView","setActiveView","selectActiveView","console","log"],"sources":["/Users/rominatorresbarahona/Archivov2/src/component/SelphiContainer.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { RootProvider } from '../context/provider';\nimport { RootContext } from '../context/provider';\nimport { SelphId } from \"./SelphId\";\nimport { Selphi } from \"./Selphi\";\n\n\nconst SelphiContainer = () => {\n\n    const rootContext = useContext(RootContext);\n    let { activeView, setActiveView } = rootContext;\n\n    const selectActiveView = () => {\n        console.log(selectActiveView)\n        if (activeView === \"SelphId\") {\n            return (<SelphId />)\n        }\n        if (activeView === \"Selphi\") {\n            return (<Selphi />)\n        }\n        return (\n            <div> Fin del proceso </div>\n        )\n    };\n\n    return (\n\n        <div id=\"biometric\">\n            {selectActiveView()}\n        </div>\n    );\n}\n\nexport { SelphiContainer };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAGA,MAAMC,eAAe,GAAG,MAAM;EAAA;;EAE1B,MAAMC,WAAW,GAAGN,UAAU,CAACE,WAAD,CAA9B;EACA,IAAI;IAAEK,UAAF;IAAcC;EAAd,IAAgCF,WAApC;;EAEA,MAAMG,gBAAgB,GAAG,MAAM;IAC3BC,OAAO,CAACC,GAAR,CAAYF,gBAAZ;;IACA,IAAIF,UAAU,KAAK,SAAnB,EAA8B;MAC1B,oBAAQ,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAAR;IACH;;IACD,IAAIA,UAAU,KAAK,QAAnB,EAA6B;MACzB,oBAAQ,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAAR;IACH;;IACD,oBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH,CAXD;;EAaA,oBAEI;IAAK,EAAE,EAAC,WAAR;IAAA,UACKE,gBAAgB;EADrB;IAAA;IAAA;IAAA;EAAA,QAFJ;AAMH,CAxBD;;GAAMJ,e;;KAAAA,e;AA0BN,SAASA,eAAT"},"metadata":{},"sourceType":"module"}