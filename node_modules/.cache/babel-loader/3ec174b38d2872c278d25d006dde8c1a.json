{"ast":null,"code":"var _jsxFileName = \"/Users/rominatorresbarahona/Archivov2/src/component/Selphi.js\",\n    _s = $RefreshSig$();\n\nimport React, { createRef, useEffect, useRef, useState, useContext } from \"react\";\nimport { FPhi } from '@facephi/selphi-widget-web';\nimport { RootContext } from \"../context/provider\";\nimport '../index.css'; // Create lambda to render the component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Selphi = props => {\n  _s();\n\n  const rootContext = useContext(RootContext);\n  let {\n    setActiveView\n  } = rootContext; // Widget Camera Resolutions\n\n  const FPhiCameraResolutions = {\n    res480p: {\n      title: \"640x480\",\n      width: 640,\n      height: 480\n    },\n    res600p: {\n      title: \"800x600\",\n      width: 800,\n      height: 600\n    },\n    res768p: {\n      title: \"1024x768\",\n      width: 1024,\n      height: 768\n    },\n    res720p: {\n      title: \"1280x720 (720p)\",\n      width: 1280,\n      height: 720\n    },\n    res1080p: {\n      title: \"1920x1080 (1080p)\",\n      width: 1920,\n      height: 1080\n    }\n  }; // Widget Capture State\n\n  const [isWidgetCaptureStarted, setIsWidgetCaptureStarted] = useState(true); // Widget General Options\n\n  const [widgetLivenessMode, setWidgetLivenessMode] = useState(FPhi.Selphi.LivenessMode.Passive);\n  const [widgetInteractible, setWidgetInteractible] = useState(true);\n  const [widgetTutorial, setWidgetTutorial] = useState(false);\n  const [widgetStabilizationStage, setWidgetStabilizationStage] = useState(false);\n  const [widgetVideoRecord, setWidgetVideoRecord] = useState(false); // const [widgetFaceTracking, setWidgetFaceTracking] = useState(false);\n  // Widget Debug Options\n\n  const [widgetShowLog, setWidgetShowLog] = useState(false);\n  const [widgetDebugMode, setWidgetDebugMode] = useState(false); // Widget Camera Options\n\n  const [widgetCameraResolution, setWidgetCameraResolution] = useState(\"res720p\");\n  const [widgetCameraType, setWidgetCameraType] = useState(FPhi.Selphi.CameraType.Front);\n  const [widgetCameraWidth, setWidgetCameraWidth] = useState(FPhiCameraResolutions.res720p.width);\n  const [widgetCameraHeight, setWidgetCameraHeight] = useState(FPhiCameraResolutions.res720p.height); // Create references\n\n  const widgetRef = /*#__PURE__*/createRef();\n  const isComponentMounted = useRef(); // Link events with effect\n\n  useEffect(() => {\n    if (!isComponentMounted.current) {\n      isComponentMounted.current = true;\n    } else {\n      if (isWidgetCaptureStarted) {\n        const node = widgetRef.current;\n        node.addWidgetEventListener(\"onModuleLoaded\", onModuleLoaded);\n        node.addWidgetEventListener(\"onStabilizing\", onStabilizing);\n        node.addWidgetEventListener(\"onExtractionFinish\", onExtractionFinish);\n        node.addWidgetEventListener(\"onUserCancel\", onUserCancel);\n        node.addWidgetEventListener(\"onExceptionCaptured\", onExceptionCaptured);\n        node.addWidgetEventListener(\"onLivenessError\", onLivenessError);\n        node.addWidgetEventListener(\"onLivenessErrorButtonClick\", onLivenessErrorButtonClick);\n        node.addWidgetEventListener(\"onExtractionTimeout\", onExtractionTimeout);\n        node.addWidgetEventListener(\"onTimeoutErrorButtonClick\", onTimeoutErrorButtonClick);\n        node.addWidgetEventListener(\"onTrackStatus\", onTrackStatus);\n      }\n    }\n  }); // Widget event input handler\n\n  function onCameraResolutionChanged(event) {\n    setWidgetCameraWidth(FPhiCameraResolutions[event.target.value].width);\n    setWidgetCameraHeight(FPhiCameraResolutions[event.target.value].height);\n    setWidgetCameraResolution(event.target.value);\n  } // Widget start & stop buttons\n\n\n  function onStartCapture() {\n    console.warn(\">>>> [app] onStartCapture\", isWidgetCaptureStarted);\n    setIsWidgetCaptureStarted(!isWidgetCaptureStarted);\n  }\n\n  function onStopCapture() {\n    console.warn(\">>>> [app] onStopCapture\", isWidgetCaptureStarted);\n    setIsWidgetCaptureStarted(false);\n  } // Widget event handlers\n\n\n  function onModuleLoaded(eventData) {\n    console.warn(\"[Selphi] onModuleLoaded\");\n    console.log(eventData);\n  }\n\n  function onStabilizing(stabilizingResult) {\n    console.warn(\"[Selphi] onStabilizing\");\n    console.log(stabilizingResult);\n  }\n\n  function onExtractionFinish(extractionResult) {\n    console.warn(\"[Selphi] onExtractionFinish\");\n    console.log(extractionResult);\n    console.log(\"Images returned: \", extractionResult.detail.images);\n\n    for (let i = 0; i < extractionResult.detail.images.length; i++) {\n      const img = extractionResult.detail.images[i];\n      console.log(`Image ${i}: ${img.src}`);\n    }\n\n    if (extractionResult.detail.bestImage) console.log(\"BestImage: \", extractionResult.detail.bestImage.src);\n    if (extractionResult.detail.bestImageCropped) console.log(\"BestImageCropped: \", extractionResult.detail.bestImageCropped.src);\n    console.log(\"Template: \", extractionResult.detail.template);\n    console.log(\"TemplateRaw: \", extractionResult.detail.templateRaw);\n    console.log(\"TimeStamp: \", extractionResult.detail.timeStamp);\n    console.log(\"LivenessMoveFails: \", extractionResult.detail.livenessMoveFails);\n    console.log(\"SunGlassesScore: \", extractionResult.detail.sunGlassesScore);\n    console.log(\"LivenessMoveHistory: \", extractionResult.detail.livenessMoveHistory);\n    console.log(\"LivenessMoveStabilizedStatusHistory: \", extractionResult.detail.livenessMoveStabilizedStatusHistory);\n    console.log(\"LivenessMoveLastStabilizedStatus: \", extractionResult.detail.livenessMoveLastStabilizedStatus);\n\n    if (extractionResult.detail.bestImage) {\n      FPhi.Selphi.Component.generateTemplateRawFromByteArray(\"../../assets/selphi\", extractionResult.detail.bestImage, result => {\n        console.log(\"BestImage Template Raw: \", result);\n        setIsWidgetCaptureStarted(false);\n      });\n    } else {\n      setIsWidgetCaptureStarted(false);\n    }\n\n    setActiveView(\"next\");\n  }\n\n  function onUserCancel() {\n    console.warn(\"[Selphi] onUserCancel\");\n    setIsWidgetCaptureStarted(false);\n  }\n\n  function onExceptionCaptured(exceptionResult) {\n    console.warn(\"[Selphi] onExceptionCaptured\");\n    console.log(`exceptionType: ${exceptionResult.detail.exceptionType}`);\n    console.log(`exceptionMessage: ${exceptionResult.detail.message}`);\n    console.log(exceptionResult);\n    setIsWidgetCaptureStarted(false);\n  }\n\n  function onLivenessError(livenessErrorResult) {\n    console.warn(\"[Selphi] onLivenessError\");\n    console.log(livenessErrorResult);\n\n    switch (livenessErrorResult.detail.livenessErrorType) {\n      case FPhi.Selphi.LivenessDiagnostic.Unsuccess:\n        console.log(\"[Selphi] Liveness error: Blink or movement not detected\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessLowPerformance:\n        console.log(\"[Selphi] Liveness error: Low performance\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessGlasses:\n        console.log(\"[Selphi] Liveness error: Glasses detected\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessLight:\n        console.log(\"[Selphi] Liveness error: Bad lighting conditions\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessNoMovement:\n        console.log(\"[Selphi] Liveness error: No movement\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessWrongDirection:\n        console.log(\"[Selphi] Liveness error: Wrong direction\");\n        break;\n\n      case FPhi.Selphi.LivenessDiagnostic.UnsuccessTooFar:\n        console.log(\"[Selphi] Liveness error: Face too far\");\n        break;\n\n      default:\n        console.log(\"[Selphi] Liveness error\");\n        break;\n    }\n  }\n\n  function onLivenessErrorButtonClick() {\n    console.warn(\"[Selphi] onLivenessErrorButtonClick\");\n    setIsWidgetCaptureStarted(false);\n  }\n\n  function onExtractionTimeout(extractionTimeoutResult) {\n    console.warn(\"[Selphi] onExtractionTimeout\");\n    console.log(extractionTimeoutResult);\n  }\n\n  function onTimeoutErrorButtonClick() {\n    console.warn(\"[Selphi] onTimeoutErrorButtonClick\");\n    setIsWidgetCaptureStarted(false);\n  }\n\n  function onTrackStatus(eventData) {\n    let trackStatusCode = Object.entries(FPhi.Selphi.TrackStatus).find(e => e[1] === eventData.detail.code);\n    console.warn(`[Selphi] onTrackStatus (Code: ${trackStatusCode[1]} - ${trackStatusCode[0]}, Timestamp: ${eventData.detail.timeStamp}`);\n    console.log(eventData);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row min-h-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-md-9\",\n      style: {\n        minHeight: 550\n      },\n      children: isWidgetCaptureStarted && /*#__PURE__*/_jsxDEV(\"facephi-selphi\", {\n        className: \"min-h-100\",\n        ref: widgetRef,\n        bundlePath: \"../../assets/selphi\" // faceTracking={widgetFaceTracking}\n        ,\n        language: \"es\",\n        livenessMode: widgetLivenessMode,\n        cameraWidth: widgetCameraWidth,\n        cameraHeight: widgetCameraHeight,\n        cameraType: widgetCameraType,\n        interactible: widgetInteractible,\n        tutorial: widgetTutorial,\n        stabilizationStage: widgetStabilizationStage,\n        logImages: true,\n        cropFactor: 1.7,\n        videoRecord: widgetVideoRecord,\n        videoRecordType: FPhi.Selphi.RecorderType.Remote,\n        videoRecordScale: widgetCameraWidth < 1280 ? 1 : 0.5,\n        showLog: widgetShowLog,\n        debugMode: widgetDebugMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Selphi, \"cgL67fEY8C+4zRpOwP4Vzx3E8cE=\");\n\n_c = Selphi;\nexport { Selphi };\n\nvar _c;\n\n$RefreshReg$(_c, \"Selphi\");","map":{"version":3,"names":["React","createRef","useEffect","useRef","useState","useContext","FPhi","RootContext","Selphi","props","rootContext","setActiveView","FPhiCameraResolutions","res480p","title","width","height","res600p","res768p","res720p","res1080p","isWidgetCaptureStarted","setIsWidgetCaptureStarted","widgetLivenessMode","setWidgetLivenessMode","LivenessMode","Passive","widgetInteractible","setWidgetInteractible","widgetTutorial","setWidgetTutorial","widgetStabilizationStage","setWidgetStabilizationStage","widgetVideoRecord","setWidgetVideoRecord","widgetShowLog","setWidgetShowLog","widgetDebugMode","setWidgetDebugMode","widgetCameraResolution","setWidgetCameraResolution","widgetCameraType","setWidgetCameraType","CameraType","Front","widgetCameraWidth","setWidgetCameraWidth","widgetCameraHeight","setWidgetCameraHeight","widgetRef","isComponentMounted","current","node","addWidgetEventListener","onModuleLoaded","onStabilizing","onExtractionFinish","onUserCancel","onExceptionCaptured","onLivenessError","onLivenessErrorButtonClick","onExtractionTimeout","onTimeoutErrorButtonClick","onTrackStatus","onCameraResolutionChanged","event","target","value","onStartCapture","console","warn","onStopCapture","eventData","log","stabilizingResult","extractionResult","detail","images","i","length","img","src","bestImage","bestImageCropped","template","templateRaw","timeStamp","livenessMoveFails","sunGlassesScore","livenessMoveHistory","livenessMoveStabilizedStatusHistory","livenessMoveLastStabilizedStatus","Component","generateTemplateRawFromByteArray","result","exceptionResult","exceptionType","message","livenessErrorResult","livenessErrorType","LivenessDiagnostic","Unsuccess","UnsuccessLowPerformance","UnsuccessGlasses","UnsuccessLight","UnsuccessNoMovement","UnsuccessWrongDirection","UnsuccessTooFar","extractionTimeoutResult","trackStatusCode","Object","entries","TrackStatus","find","e","code","minHeight","RecorderType","Remote"],"sources":["/Users/rominatorresbarahona/Archivov2/src/component/Selphi.js"],"sourcesContent":["import React, {createRef, useEffect, useRef, useState, useContext} from \"react\";\nimport {FPhi} from '@facephi/selphi-widget-web';\nimport { RootContext } from \"../context/provider\";\nimport '../index.css';\n\n\n// Create lambda to render the component\nconst Selphi = (props) => {\n\n    const rootContext = useContext(RootContext);\n    let {setActiveView}=rootContext;\n    \n    // Widget Camera Resolutions\n    const FPhiCameraResolutions = {\n        res480p: {title: \"640x480\", width: 640, height: 480},\n        res600p: {title: \"800x600\", width: 800, height: 600},\n        res768p: {title: \"1024x768\", width: 1024, height: 768},\n        res720p: {title: \"1280x720 (720p)\", width: 1280, height: 720},\n        res1080p: {title: \"1920x1080 (1080p)\", width: 1920, height: 1080},\n    };\n\n    // Widget Capture State\n    const [isWidgetCaptureStarted, setIsWidgetCaptureStarted] = useState(true);\n\n    // Widget General Options\n    const [widgetLivenessMode, setWidgetLivenessMode] = useState(FPhi.Selphi.LivenessMode.Passive);\n    const [widgetInteractible, setWidgetInteractible] = useState(true);\n    const [widgetTutorial, setWidgetTutorial] = useState(false);\n    const [widgetStabilizationStage, setWidgetStabilizationStage] = useState(false);\n    const [widgetVideoRecord, setWidgetVideoRecord] = useState(false);\n    // const [widgetFaceTracking, setWidgetFaceTracking] = useState(false);\n\n    // Widget Debug Options\n    const [widgetShowLog, setWidgetShowLog] = useState(false);\n    const [widgetDebugMode, setWidgetDebugMode] = useState(false);\n\n    // Widget Camera Options\n    const [widgetCameraResolution, setWidgetCameraResolution] = useState(\"res720p\");\n    const [widgetCameraType, setWidgetCameraType] = useState(FPhi.Selphi.CameraType.Front);\n    const [widgetCameraWidth, setWidgetCameraWidth] = useState(FPhiCameraResolutions.res720p.width);\n    const [widgetCameraHeight, setWidgetCameraHeight] = useState(FPhiCameraResolutions.res720p.height);\n\n    // Create references\n    const widgetRef = createRef();\n    const isComponentMounted = useRef();\n\n    // Link events with effect\n    useEffect(() => {\n        if (!isComponentMounted.current) {\n            isComponentMounted.current = true;\n        } else {\n            if (isWidgetCaptureStarted) {\n                const node = widgetRef.current\n\n                node.addWidgetEventListener(\"onModuleLoaded\", onModuleLoaded)\n                node.addWidgetEventListener(\"onStabilizing\", onStabilizing)\n                node.addWidgetEventListener(\"onExtractionFinish\", onExtractionFinish)\n                node.addWidgetEventListener(\"onUserCancel\", onUserCancel)\n                node.addWidgetEventListener(\"onExceptionCaptured\", onExceptionCaptured)\n                node.addWidgetEventListener(\"onLivenessError\", onLivenessError)\n                node.addWidgetEventListener(\"onLivenessErrorButtonClick\", onLivenessErrorButtonClick)\n                node.addWidgetEventListener(\"onExtractionTimeout\", onExtractionTimeout)\n                node.addWidgetEventListener(\"onTimeoutErrorButtonClick\", onTimeoutErrorButtonClick)\n                node.addWidgetEventListener(\"onTrackStatus\", onTrackStatus)\n            }\n        }\n    });\n\n    // Widget event input handler\n    function onCameraResolutionChanged(event) {\n        setWidgetCameraWidth(FPhiCameraResolutions[event.target.value].width);\n        setWidgetCameraHeight(FPhiCameraResolutions[event.target.value].height);\n\n        setWidgetCameraResolution(event.target.value);\n    }\n\n    // Widget start & stop buttons\n    function onStartCapture() {\n        console.warn(\">>>> [app] onStartCapture\", isWidgetCaptureStarted);\n        setIsWidgetCaptureStarted(!isWidgetCaptureStarted);\n    }\n\n    function onStopCapture() {\n        console.warn(\">>>> [app] onStopCapture\", isWidgetCaptureStarted);\n        setIsWidgetCaptureStarted(false);\n    }\n\n    // Widget event handlers\n    function onModuleLoaded(eventData) {\n        console.warn(\"[Selphi] onModuleLoaded\");\n        console.log(eventData);\n    }\n\n    function onStabilizing(stabilizingResult) {\n        console.warn(\"[Selphi] onStabilizing\");\n        console.log(stabilizingResult);\n    }\n\n    function onExtractionFinish(extractionResult) {\n        console.warn(\"[Selphi] onExtractionFinish\");\n        console.log(extractionResult);\n\n        console.log(\"Images returned: \", extractionResult.detail.images);\n        for (let i = 0; i < extractionResult.detail.images.length; i++) {\n            const img = extractionResult.detail.images[i];\n            console.log(`Image ${i}: ${img.src}`);\n        }\n\n        if (extractionResult.detail.bestImage)\n            console.log(\"BestImage: \", extractionResult.detail.bestImage.src);\n        if (extractionResult.detail.bestImageCropped)\n            console.log(\"BestImageCropped: \", extractionResult.detail.bestImageCropped.src);\n\n        console.log(\"Template: \", extractionResult.detail.template);\n        console.log(\"TemplateRaw: \", extractionResult.detail.templateRaw);\n        console.log(\"TimeStamp: \", extractionResult.detail.timeStamp);\n\n        console.log(\"LivenessMoveFails: \", extractionResult.detail.livenessMoveFails);\n        console.log(\"SunGlassesScore: \", extractionResult.detail.sunGlassesScore);\n\n        console.log(\"LivenessMoveHistory: \", extractionResult.detail.livenessMoveHistory);\n        console.log(\"LivenessMoveStabilizedStatusHistory: \", extractionResult.detail.livenessMoveStabilizedStatusHistory);\n        console.log(\"LivenessMoveLastStabilizedStatus: \", extractionResult.detail.livenessMoveLastStabilizedStatus);\n\n        if (extractionResult.detail.bestImage) {\n            FPhi.Selphi.Component.generateTemplateRawFromByteArray(\"../../assets/selphi\", extractionResult.detail.bestImage, result => {\n                console.log(\"BestImage Template Raw: \", result);\n                setIsWidgetCaptureStarted(false);\n            });\n        } else {\n            setIsWidgetCaptureStarted(false);\n        }\n\n        setActiveView(\"next\");\n    }\n\n    function onUserCancel() {\n        console.warn(\"[Selphi] onUserCancel\");\n        setIsWidgetCaptureStarted(false);\n    }\n\n    function onExceptionCaptured(exceptionResult) {\n        console.warn(\"[Selphi] onExceptionCaptured\");\n        console.log(`exceptionType: ${exceptionResult.detail.exceptionType}`);\n        console.log(`exceptionMessage: ${exceptionResult.detail.message}`);\n        console.log(exceptionResult);\n\n        setIsWidgetCaptureStarted(false);\n    }\n\n    function onLivenessError(livenessErrorResult) {\n        console.warn(\"[Selphi] onLivenessError\");\n        console.log(livenessErrorResult);\n\n        switch (livenessErrorResult.detail.livenessErrorType) {\n            case FPhi.Selphi.LivenessDiagnostic.Unsuccess:\n                console.log(\"[Selphi] Liveness error: Blink or movement not detected\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessLowPerformance:\n                console.log(\"[Selphi] Liveness error: Low performance\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessGlasses:\n                console.log(\"[Selphi] Liveness error: Glasses detected\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessLight:\n                console.log(\"[Selphi] Liveness error: Bad lighting conditions\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessNoMovement:\n                console.log(\"[Selphi] Liveness error: No movement\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessWrongDirection:\n                console.log(\"[Selphi] Liveness error: Wrong direction\");\n                break;\n            case FPhi.Selphi.LivenessDiagnostic.UnsuccessTooFar:\n                console.log(\"[Selphi] Liveness error: Face too far\");\n                break;\n            default:\n                console.log(\"[Selphi] Liveness error\");\n                break;\n        }\n    }\n\n    function onLivenessErrorButtonClick() {\n        console.warn(\"[Selphi] onLivenessErrorButtonClick\");\n        setIsWidgetCaptureStarted(false);\n    }\n\n    function onExtractionTimeout(extractionTimeoutResult) {\n        console.warn(\"[Selphi] onExtractionTimeout\");\n        console.log(extractionTimeoutResult);\n    }\n\n    function onTimeoutErrorButtonClick() {\n        console.warn(\"[Selphi] onTimeoutErrorButtonClick\");\n        setIsWidgetCaptureStarted(false);\n    }\n\n    function onTrackStatus(eventData) {\n        let trackStatusCode = Object.entries(FPhi.Selphi.TrackStatus).find(e => e[1] === eventData.detail.code);\n        console.warn(`[Selphi] onTrackStatus (Code: ${trackStatusCode[1]} - ${trackStatusCode[0]}, Timestamp: ${eventData.detail.timeStamp}`);\n        console.log(eventData);\n    }\n\n    return (\n      \n            \n            <div className=\"row min-h-100\">\n                {/* Widget web SelphID */}\n                <div className=\"col-12 col-md-9\" style={{minHeight: 550}}>\n                    {isWidgetCaptureStarted &&\n                        <facephi-selphi\n                            className=\"min-h-100\"\n\n                            ref={widgetRef}\n\n                            bundlePath=\"../../assets/selphi\"\n                            // faceTracking={widgetFaceTracking}\n\n                            language=\"es\"\n\n                            livenessMode={widgetLivenessMode}\n\n                            cameraWidth={widgetCameraWidth}\n                            cameraHeight={widgetCameraHeight}\n                            cameraType={widgetCameraType}\n\n                            interactible={widgetInteractible}\n                            tutorial={widgetTutorial}\n                            stabilizationStage={widgetStabilizationStage}\n\n                            logImages={true}\n                            cropFactor={1.7}\n\n                            videoRecord={widgetVideoRecord}\n                            videoRecordType={FPhi.Selphi.RecorderType.Remote}\n                            videoRecordScale={widgetCameraWidth < 1280 ? 1 : 0.5}\n\n                            showLog={widgetShowLog}\n                            debugMode={widgetDebugMode}\n                        />\n                    }\n                </div>\n\n                \n            </div>\n        \n    );\n}\n\nexport {Selphi};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}